AWSTemplateFormatVersion: "2010-09-09"
Description: "IAM Roles for EKS Cluster with RDS Access"

Resources:
  # EKS Cluster Role - for the EKS control plane
  EKSClusterRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: eks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy

  # EKS Node Role - for the EC2 instances in the node group
  EKSNodeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy

  # Pod Execution Role - for IRSA (IAM Roles for Service Accounts)
  EKSPodExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Sub "arn:aws:iam::${AWS::AccountId}:oidc-provider/oidc.eks.${AWS::Region}.amazonaws.com/id/${EKSOIDCProviderID}"
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                !Sub "oidc.eks.${AWS::Region}.amazonaws.com/id/${EKSOIDCProviderID}:sub": "system:serviceaccount:default:rds-access-sa"
                !Sub "oidc.eks.${AWS::Region}.amazonaws.com/id/${EKSOIDCProviderID}:aud": "sts.amazonaws.com"
      Path: "/"
      Policies:
        - PolicyName: RDSAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - rds:DescribeDBInstances
                  - rds:DescribeDBClusters
                  - rds:DescribeDBClusterEndpoints
                Resource: "*"
              - Effect: Allow
                Action:
                  - rds-db:connect
                Resource: !Sub "arn:aws:rds-db:${AWS::Region}:${AWS::AccountId}:dbuser:*/*"

  # Parameter for OIDC Provider ID (to be filled after EKS cluster creation)
  EKSOIDCProviderID:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/eks/oidc-provider-id"
      Type: String
      Value: "placeholder-to-be-updated"
      Description: "OIDC Provider ID for the EKS cluster (update after cluster creation)"

  # Secret Manager Access Policy for retrieving RDS credentials
  SecretManagerAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: "Policy to allow access to Secrets Manager for RDS credentials"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:rds-*"

  # Attach Secret Manager Access Policy to Pod Execution Role
  AttachSecretManagerPolicy:
    Type: AWS::IAM::PolicyAttachment
    Properties:
      PolicyArn: !Ref SecretManagerAccessPolicy
      Roles:
        - !Ref EKSPodExecutionRole

Outputs:
  EKSClusterRoleArn:
    Value: !GetAtt EKSClusterRole.Arn
    Export:
      Name: "MyStack-EKSClusterRoleArn"
  EKSNodeRoleArn:
    Value: !GetAtt EKSNodeRole.Arn
    Export:
      Name: "MyStack-EKSNodeRoleArn"
  EKSClusterRoleName:
    Value: !Ref EKSClusterRole
    Export:
      Name: "MyStack-EKSClusterRoleName"
  EKSNodeRoleName:
    Value: !Ref EKSNodeRole
    Export:
      Name: "MyStack-EKSNodeRoleName"
  EKSPodExecutionRoleArn:
    Value: !GetAtt EKSPodExecutionRole.Arn
    Export:
      Name: "MyStack-EKSPodExecutionRoleArn"
  SecretManagerAccessPolicyArn:
    Value: !Ref SecretManagerAccessPolicy
    Export:
      Name: "MyStack-SecretManagerAccessPolicyArn"