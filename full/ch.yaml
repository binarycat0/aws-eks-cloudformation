AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation template for EC2 instance with ClickHouse for EKS integration"

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - staging
      - prod
    Description: Environment type for resource tagging
  
  ClusterName:
    Type: String
    Default: eks-cluster
    Description: Name of the EKS cluster for resource tagging
  
  InstanceType:
    Type: String
    Default: t3.medium
    AllowedValues:
      - t3.medium
      - t3.large
      - m5.large
      - m5.xlarge
    Description: EC2 instance type for ClickHouse server

Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-0c7217cdde317cfec  # Amazon Linux 2023 AMI in us-east-1
    us-east-2:
      AMI: ami-05fb0b8c1424f266b  # Amazon Linux 2023 AMI in us-east-2
    us-west-1:
      AMI: ami-0ce2cb35386fc22e9  # Amazon Linux 2023 AMI in us-west-1
    us-west-2:
      AMI: ami-008fe2fc65df48dac  # Amazon Linux 2023 AMI in us-west-2
    eu-west-1:
      AMI: ami-0694d931cee176e7d  # Amazon Linux 2023 AMI in eu-west-1
    eu-central-1:
      AMI: ami-0292a7dcdbd5b2be6  # Amazon Linux 2023 AMI in eu-central-1
    ap-northeast-1:
      AMI: ami-0ab0bbbd329f565e6  # Amazon Linux 2023 AMI in ap-northeast-1
    ap-southeast-1:
      AMI: ami-0df7a207adb9748c7  # Amazon Linux 2023 AMI in ap-southeast-1
    ap-southeast-2:
      AMI: ami-0310483fb2b488153  # Amazon Linux 2023 AMI in ap-southeast-2

Resources:
  # CloudWatch Log Group for ClickHouse
  ClickHouseLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/ec2/clickhouse/${ClusterName}-${Environment}"
      RetentionInDays: 7
      Tags:
        Environment: !Ref Environment
        ManagedBy: CloudFormation
        ClusterName: !Ref ClusterName

  # Generate a random password for ClickHouse
  ClickHousePassword:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: "Password for ClickHouse default user"
      Name: !Sub "clickhouse-${ClusterName}-${Environment}-password"
      GenerateSecretString:
        PasswordLength: 16
        ExcludeCharacters: '\"@/\\\''
        ExcludePunctuation: true
        IncludeSpace: false
        RequireEachIncludedType: true
      Tags:
        - Key: Name
          Value: !Sub "clickhouse-${ClusterName}-${Environment}-password"
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # Store the password in SSM Parameter Store
  ClickHousePasswordParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/clickhouse/${ClusterName}/${Environment}/admin-password"
      Description: "Password for ClickHouse default user"
      Type: "SecureString"
      Value: !Sub "{{resolve:secretsmanager:${ClickHousePassword}:SecretString}}"
      Tags:
        ClusterName: !Ref ClusterName
        Environment: !Ref Environment
        ManagedBy: CloudFormation

  ClickHouseInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        - !ImportValue "MyStack-ClickHouseSecurityGroupId"
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      SubnetId: !ImportValue "MyStack-PrivateSubnet1"
      IamInstanceProfile: !ImportValue "MyStack-ClickHouseInstanceProfileName"
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp3
            VolumeSize: 100
            DeleteOnTermination: true
            Encrypted: true
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          
          # Update system packages
          dnf update -y
          
          # Install required packages
          dnf install -y curl wget jq aws-cli amazon-cloudwatch-agent

          # Get the password from Secrets Manager
          PASSWORD=$(aws secretsmanager get-secret-value --secret-id ${ClickHousePassword} --region ${AWS::Region} --query SecretString --output text)
          
          # Add ClickHouse repository
          sudo mkdir -p /etc/apt/sources.list.d/
          sudo mkdir -p /etc/apt/keyrings/
          curl -fsSL https://packages.clickhouse.com/rpm/clickhouse.repo | sudo tee /etc/yum.repos.d/clickhouse.repo
          
          # Install ClickHouse server and client
          dnf install -y clickhouse-server clickhouse-client
          
          # Configure ClickHouse to listen on all interfaces
          sed -i 's/<listen_host>::1/<listen_host>::<\\/listen_host>\\n    <listen_host>0.0.0.0/g' /etc/clickhouse-server/config.xml
          
          # Configure ClickHouse users
          cat > /etc/clickhouse-server/users.d/custom-users.xml << EOF
          <clickhouse>
              <users>
                  <default>
                      <password>$PASSWORD</password>
                      <profile>default</profile>
                      <quota>default</quota>
                      <networks>
                          <ip>::/0</ip>
                      </networks>
                      <access_management>1</access_management>
                  </default>
              </users>
          </clickhouse>
          EOF
          
          # Configure CloudWatch agent
          cat > /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json << EOF
          {
            "agent": {
              "metrics_collection_interval": 60,
              "run_as_user": "root"
            },
            "logs": {
              "logs_collected": {
                "files": {
                  "collect_list": [
                    {
                      "file_path": "/var/log/clickhouse-server/clickhouse-server.log",
                      "log_group_name": "/aws/ec2/clickhouse/${ClusterName}-${Environment}",
                      "log_stream_name": "{instance_id}/clickhouse-server.log"
                    },
                    {
                      "file_path": "/var/log/clickhouse-server/clickhouse-server.err.log",
                      "log_group_name": "/aws/ec2/clickhouse/${ClusterName}-${Environment}",
                      "log_stream_name": "{instance_id}/clickhouse-server.err.log"
                    }
                  ]
                }
              }
            },
            "metrics": {
              "namespace": "ClickHouse/Metrics",
              "metrics_collected": {
                "cpu": {
                  "measurement": [
                    "cpu_usage_idle",
                    "cpu_usage_iowait",
                    "cpu_usage_user",
                    "cpu_usage_system"
                  ],
                  "metrics_collection_interval": 60,
                  "totalcpu": false
                },
                "disk": {
                  "measurement": [
                    "used_percent",
                    "inodes_free"
                  ],
                  "metrics_collection_interval": 60,
                  "resources": [
                    "*"
                  ]
                },
                "diskio": {
                  "measurement": [
                    "io_time"
                  ],
                  "metrics_collection_interval": 60,
                  "resources": [
                    "*"
                  ]
                },
                "mem": {
                  "measurement": [
                    "mem_used_percent"
                  ],
                  "metrics_collection_interval": 60
                },
                "swap": {
                  "measurement": [
                    "swap_used_percent"
                  ],
                  "metrics_collection_interval": 60
                }
              }
            }
          }
          EOF
          
          # Start CloudWatch agent
          systemctl enable amazon-cloudwatch-agent
          systemctl start amazon-cloudwatch-agent
          
          # Start ClickHouse service
          systemctl start clickhouse-server
          systemctl enable clickhouse-server
          
          # Wait for ClickHouse to start
          sleep 10
          
          # Create application database
          clickhouse-client --password "$PASSWORD" --query "CREATE DATABASE IF NOT EXISTS appdb"
          
          # Signal completion
          echo "ClickHouse installation completed" > /var/log/clickhouse-install-complete.log
          
          # Tag the instance with EKS cluster name for easier identification
          INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
          aws ec2 create-tags --resources $INSTANCE_ID --tags Key=EKSCluster,Value=${ClusterName} Key=Environment,Value=${Environment} --region ${AWS::Region}
      Tags:
        - Key: Name
          Value: !Sub "ClickHouse-Server-${ClusterName}-${Environment}"
        - Key: EKSCluster
          Value: !Ref ClusterName
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # CloudWatch Alarm for high CPU utilization
  ClickHouseCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${ClusterName}-${Environment}-clickhouse-high-cpu"
      AlarmDescription: "Alarm when CPU exceeds 80% for 5 minutes"
      MetricName: cpu_usage_system
      Namespace: ClickHouse/Metrics
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: InstanceId
          Value: !Ref ClickHouseInstance
      TreatMissingData: notBreaching
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation
        - Key: ClusterName
          Value: !Ref ClusterName

  # CloudWatch Alarm for high disk usage
  ClickHouseDiskAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${ClusterName}-${Environment}-clickhouse-high-disk"
      AlarmDescription: "Alarm when disk usage exceeds 80% for 5 minutes"
      MetricName: disk_used_percent
      Namespace: ClickHouse/Metrics
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: InstanceId
          Value: !Ref ClickHouseInstance
        - Name: path
          Value: "/"
      TreatMissingData: notBreaching
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation
        - Key: ClusterName
          Value: !Ref ClusterName

  # CloudWatch Dashboard for ClickHouse
  ClickHouseDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub "${ClusterName}-${Environment}-clickhouse-dashboard"
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "ClickHouse/Metrics", "cpu_usage_system", "InstanceId", "${ClickHouseInstance}" ],
                  [ ".", "cpu_usage_user", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "CPU Usage",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "ClickHouse/Metrics", "disk_used_percent", "InstanceId", "${ClickHouseInstance}", "path", "/", "device", "*", "fstype", "*" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Disk Usage",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 6,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "ClickHouse/Metrics", "mem_used_percent", "InstanceId", "${ClickHouseInstance}" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Memory Usage",
                "period": 300
              }
            },
            {
              "type": "log",
              "x": 12,
              "y": 6,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '/aws/ec2/clickhouse/${ClusterName}-${Environment}' | fields @timestamp, @message\n| sort @timestamp desc\n| limit 20",
                "region": "${AWS::Region}",
                "title": "ClickHouse Logs",
                "view": "table"
              }
            }
          ]
        }

Outputs:
  ClickHouseInstanceId:
    Description: ID of the ClickHouse EC2 instance
    Value: !Ref ClickHouseInstance
    Export:
      Name: !Sub "${AWS::StackName}-ClickHouseInstanceId"
  
  ClickHousePrivateIP:
    Description: Private IP address of the ClickHouse instance (for EKS access)
    Value: !GetAtt ClickHouseInstance.PrivateIp
    Export:
      Name: !Sub "${AWS::StackName}-ClickHousePrivateIP"
  
  ClickHouseHTTPEndpoint:
    Description: HTTP endpoint for ClickHouse (private access only)
    Value: !Sub "http://${ClickHouseInstance.PrivateIp}:8123"
    Export:
      Name: !Sub "${AWS::StackName}-ClickHouseHTTPEndpoint"
  
  ClickHouseClientEndpoint:
    Description: Client endpoint for ClickHouse (private access only)
    Value: !Sub "${ClickHouseInstance.PrivateIp}:9000"
    Export:
      Name: !Sub "${AWS::StackName}-ClickHouseClientEndpoint"
      
  ClickHousePasswordParameter:
    Description: SSM Parameter Store path for the ClickHouse password
    Value: !Sub "/clickhouse/${ClusterName}/${Environment}/admin-password"
    Export:
      Name: !Sub "${AWS::StackName}-ClickHousePasswordParameter"
      
  ClickHouseSecretArn:
    Description: ARN of the Secrets Manager secret containing the ClickHouse password
    Value: !Ref ClickHousePassword
    Export:
      Name: !Sub "${AWS::StackName}-ClickHouseSecretArn"
  
  ClickHouseLogGroupName:
    Description: Name of the CloudWatch Log Group for ClickHouse logs
    Value: !Ref ClickHouseLogGroup
    Export:
      Name: !Sub "${AWS::StackName}-ClickHouseLogGroupName"
  
  ClickHouseDashboardName:
    Description: Name of the CloudWatch Dashboard for ClickHouse monitoring
    Value: !Ref ClickHouseDashboard
    Export:
      Name: !Sub "${AWS::StackName}-ClickHouseDashboardName"