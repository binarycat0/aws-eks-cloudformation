AWSTemplateFormatVersion: "2010-09-09"
Description: "Simplified CloudFormation template for EC2 instance with ClickHouse for EKS integration"

Parameters:
  ClusterName:
    Type: String
    Default: demo-eks
    Description: Name of the EKS cluster for resource tagging
  
  InstanceType:
    Type: String
    Default: t3.small
    AllowedValues:
      - t3.small
      - t3.medium
    Description: EC2 instance type for ClickHouse server

# Use the latest Amazon Linux 2023 AMI using the SSM parameter
# This is more maintainable than hardcoding AMI IDs that frequently change

Resources:
  # Generate a random password for ClickHouse
  ClickHousePassword:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: "Password for ClickHouse default user"
      Name: !Sub "clickhouse-${ClusterName}-demo-password"
      GenerateSecretString:
        PasswordLength: 16
        ExcludeCharacters: '"@/\\'
        ExcludePunctuation: true
        IncludeSpace: false
        RequireEachIncludedType: true
      Tags:
        - Key: Name
          Value: !Sub "clickhouse-${ClusterName}-demo-password"
        - Key: Environment
          Value: demo
        - Key: ManagedBy
          Value: CloudFormation

  # Store the password in SSM Parameter Store
  ClickHousePasswordParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/clickhouse/${ClusterName}/demo/admin-password"
      Description: "Password for ClickHouse default user"
      Type: "String"
      Value: !Join ['', ['{{resolve:secretsmanager:', !Ref ClickHousePassword, ':SecretString}}' ]]
      Tags:
        ClusterName: !Ref ClusterName
        Environment: demo
        ManagedBy: CloudFormation

  ClickHouseInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        - Fn::ImportValue:
            Fn::Sub: "${ClusterName}-ClickHouseSecurityGroupId"
      ImageId: "ami-009082a6cd90ccd0e"  # Latest Amazon Linux 2023 AMI in eu-central-1
      SubnetId:
        Fn::ImportValue:
          Fn::Sub: "${ClusterName}-PrivateSubnet1"  # Using private subnet for EKS-only access
      IamInstanceProfile:
        Fn::ImportValue:
          Fn::Sub: "${ClusterName}-ClickHouseInstanceProfileName"
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp3
            VolumeSize: 20  # Smaller for demo
            DeleteOnTermination: true
            Encrypted: true
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          
          # Update system packages
          dnf update -y
          
          # Install required packages
          dnf install -y curl wget jq aws-cli
          
          # Get the password from Secrets Manager
          PASSWORD=$(aws secretsmanager get-secret-value --secret-id ${ClickHousePassword} --region ${AWS::Region} --query SecretString --output text)
          
          # Add ClickHouse repository
          sudo mkdir -p /etc/apt/sources.list.d/
          sudo mkdir -p /etc/apt/keyrings/
          curl -fsSL https://packages.clickhouse.com/rpm/clickhouse.repo | sudo tee /etc/yum.repos.d/clickhouse.repo
          
          # Install ClickHouse server and client
          dnf install -y clickhouse-server clickhouse-client
          
          # Configure ClickHouse to listen on all interfaces
          sed -i 's/<listen_host>::1/<listen_host>::<\/listen_host>\n    <listen_host>0.0.0.0/g' /etc/clickhouse-server/config.xml
          
          # Configure ClickHouse users
          cat > /etc/clickhouse-server/users.d/custom-users.xml << EOF
          <clickhouse>
              <users>
                  <default>
                      <password>$PASSWORD</password>
                      <profile>default</profile>
                      <quota>default</quota>
                      <networks>
                          <ip>::/0</ip>
                      </networks>
                      <access_management>1</access_management>
                  </default>
              </users>
          </clickhouse>
          EOF
          
          # Start ClickHouse service
          systemctl start clickhouse-server
          systemctl enable clickhouse-server
          
          # Wait for ClickHouse to start
          sleep 10
          
          # Create application database
          clickhouse-client --password "$PASSWORD" --query "CREATE DATABASE IF NOT EXISTS appdb"
          
          # Signal completion
          echo "ClickHouse installation completed" > /var/log/clickhouse-install-complete.log
      Tags:
        - Key: Name
          Value: !Sub "ClickHouse-Server-${ClusterName}-demo"
        - Key: EKSCluster
          Value: !Ref ClusterName
        - Key: Environment
          Value: demo
        - Key: ManagedBy
          Value: CloudFormation

Outputs:
  ClickHouseInstanceId:
    Description: ID of the ClickHouse EC2 instance
    Value: !Ref ClickHouseInstance
    Export:
      Name: !Sub "${ClusterName}-ClickHouseInstanceId"
  
  ClickHousePrivateIP:
    Description: Private IP address of the ClickHouse instance (for EKS access)
    Value: !GetAtt ClickHouseInstance.PrivateIp
    Export:
      Name: !Sub "${ClusterName}-ClickHousePrivateIP"
  
  ClickHouseHTTPEndpoint:
    Description: HTTP endpoint for ClickHouse (private access only)
    Value: !Sub "http://${ClickHouseInstance.PrivateIp}:8123"
    Export:
      Name: !Sub "${ClusterName}-ClickHouseHTTPEndpoint"
  
  ClickHouseClientEndpoint:
    Description: Client endpoint for ClickHouse (private access only)
    Value: !Sub "${ClickHouseInstance.PrivateIp}:9000"
    Export:
      Name: !Sub "${ClusterName}-ClickHouseClientEndpoint"
      
  ClickHousePasswordParameter:
    Description: SSM Parameter Store path for the ClickHouse password
    Value: !Sub "/clickhouse/${ClusterName}/demo/admin-password"
    Export:
      Name: !Sub "${ClusterName}-ClickHousePasswordParameter"